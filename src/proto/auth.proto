syntax = "proto3";

import "src/proto/user.proto";
import "src/proto/entities/auth_entity.proto";
import "src/proto/entities/user_entity.proto";
import "src/proto/entities/shared/phone_number.proto";
import "src/proto/entities/shared/message_response.proto";
import "src/proto/entities/shared/query_params_users.proto";
import "src/proto/entities/shared/empty_value.proto";

import "src/proto/entities/auth/auth_roles.proto";
import "src/proto/entities/auth/work_groups.proto";

package authService;

service AuthService {
    rpc Token(TokensRequest) returns (TokensEntity) {};
    rpc ValidateAccessCredentials(EmptyValue) returns (ValidateAccessCredentialsResponse) {}
    rpc Login(LoginRequest) returns (LoginResponse) {};
    rpc Signup(userService.CreateUserRequest) returns (MessageResponse) {};
    rpc VerifyOtpCode(OtpValidationCodeRequest) returns (UserEntity) {};

    // comprises of permission-sets used to define user-resource access
    rpc GetRoles(EmptyValue) returns (RoleEntityList) {}
    rpc CreateRoles(CreateRolesRequest) returns (RoleEntityList) {}
    rpc AssignRoles(AssignRolesRequest) returns (AccountRoleEntity) {}

    // defines a scope to user-role (eg. operations - work group)
    rpc GetWorkGroups(QueryParamsUsers) returns (WorkGroupEntityList) {}
    rpc CreateWorkGroup(CreateWorkGroupRequest) returns (CreateWorkGroupResponse) {}
}

// token messages
message TokensRequest {
    string refreshToken = 1;
}

// login messages
message LoginRequest {
    string username = 1;
    string password = 2;
}

message OtpValidationCodeRequest {
    PhoneNumber phoneNumber = 1;
    string otpCode = 2;
}